buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        // shoutouts to autaut03/kottle
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true) {
            exclude group: 'trove', module: 'trove'
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$ktVersion"
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = '2.0.0'
group = 'xyz.phanta.libnine'
archivesBaseName = 'libnine-1.14'

sourceCompatibility = targetCompatibility = compileKotlin.kotlinOptions.jvmTarget =
        compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20190609-1.14.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                libnine {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                libnine {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.2-26.0.12'
    api "org.jetbrains.kotlin:kotlin-stdlib:$ktVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$ktVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$ktVersion"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "libnine",
                "Specification-Vendor"    : "phantamanta44",
                "Specification-Version"   : "1",
                "Implementation-Title"    : "libnine",
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "phantamanta44",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

shadowJar {
    classifier = null
    dependencies {
        include dependency("org.jetbrains.kotlin.kotlin-stdlib:$ktVersion")
        include dependency("org.jetbrains.kotlin.kotlin-stdlib-jdk8:$ktVersion")
        include dependency("org.jetbrains.kotlin.kotlin-reflect:$ktVersion")
    }
}

build.dependsOn shadowJar

artifacts {
    archives shadowJar
    archives deobfJar
    archives sourcesJar
}

publishing {
    publications {
        all(MavenPublication) {
            artifact jar
            artifact deobfJar
            artifact sourcesJar
            artifactId = archivesBaseName
        }
    }
}
